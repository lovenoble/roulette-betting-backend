/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FareNFTLootBoxController,
  FareNFTLootBoxControllerInterface,
} from "../../contracts/FareNFTLootBoxController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_itemAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "fareItems",
    outputs: [
      {
        internalType: "contract IFareItems",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fareLootBox",
    outputs: [
      {
        internalType: "contract IFareNFTLootBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestLootTableId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
    ],
    name: "getLootItemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootBoxMap",
    outputs: [
      {
        internalType: "bool",
        name: "isOpened",
        type: "bool",
      },
      {
        internalType: "enum FareNFTLootBoxController.Rarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "itemThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootTableMap",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootTableWeightMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootBoxId",
        type: "uint256",
      },
    ],
    name: "openLootBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FareNFTLootBoxController.Rarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "itemThreshold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "rewardLootBoxToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectedLootTableId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "setItemThrehold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
        ],
        internalType: "struct FareNFTLootBoxController.LootTableItem[]",
        name: "lootTableItems",
        type: "tuple[]",
      },
    ],
    name: "setLootTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
    ],
    name: "setSelectedLootTableId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060065534801561001557600080fd5b506040516112ba3803806112ba833981016040819052610034916100e5565b61003d33610079565b60018055600480546001600160a01b039485166001600160a01b0319918216179091556003805493909416921691909117909155600555610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e057600080fd5b919050565b6000806000606084860312156100fa57600080fd5b610103846100c9565b9250610111602085016100c9565b9150604084015190509250925092565b61118a806101306000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806355a02c2d116100975780638f8e422a116100665780638f8e422a14610220578063937ca2551461026b578063f2fde38b14610274578063f9cfd4c81461028757600080fd5b806355a02c2d146101e157806364860ea2146101f4578063715018a6146102075780638da5cb5b1461020f57600080fd5b80634015927a116100d35780634015927a1461017d578063466d4d1e146101905780634b0e40a8146101a357806353d5579f146101ce57600080fd5b806305010ce01461010557806321e604f31461013857806323bc00cd146101405780633378198a14610155575b600080fd5b610125610113366004610d3b565b60009081526007602052604090205490565b6040519081526020015b60405180910390f35b6101256102a7565b61015361014e366004610d3b565b6102b7565b005b610168610163366004610d54565b6102ef565b6040805192835260208301919091520161012f565b61015361018b366004610d8b565b61032b565b61015361019e366004610e41565b6104d5565b6004546101b6906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b6003546101b6906001600160a01b031681565b6101536101ef366004610d3b565b6106ee565b610153610202366004610d3b565b610a1f565b610153610a4e565b6000546001600160a01b03166101b6565b61025b61022e366004610d3b565b60096020526000908152604090208054600182015460029092015460ff8083169361010090930416919084565b60405161012f9493929190610f24565b61012560065481565b610153610282366004610f66565b610a84565b610125610295366004610d3b565b60086020526000908152604090205481565b60006102b260025490565b905090565b6000546001600160a01b031633146102ea5760405162461bcd60e51b81526004016102e190610f83565b60405180910390fd5b600655565b6007602052816000526040600020818154811061030b57600080fd5b600091825260209091206002909102018054600190910154909250905082565b6000546001600160a01b031633146103555760405162461bcd60e51b81526004016102e190610f83565b600260015414156103a85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e1565b60026001556005548211156103ff5760405162461bcd60e51b815260206004820152601c60248201527f4974656d207468726573686f6c642065786365656473206c696d69740000000060448201526064016102e1565b6003546040516340d097c360e01b81526001600160a01b03838116600483015260009216906340d097c390602401602060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610fb8565b6000818152600960205260409020805460ff1981168255919250908590829061ffff19166101008360058111156104b8576104b8610f0e565b021790555060028101939093555050600654600191820155805550565b6000546001600160a01b031633146104ff5760405162461bcd60e51b81526004016102e190610f83565b600061050a60025490565b6000818152600760205260408120919250805b84518110156106c85760045485516001600160a01b0390911690634f558e799087908490811061054f5761054f610fd1565b6020026020010151600001516040518263ffffffff1660e01b815260040161057991815260200190565b60206040518083038186803b15801561059157600080fd5b505afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190610fe7565b61060b5760405162461bcd60e51b8152602060048201526013602482015272125d195b48191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016102e1565b82604051806040016040528087848151811061062957610629610fd1565b602002602001015160000151815260200187848151811061064c5761064c610fd1565b602090810291909101810151810151909152825460018181018555600094855293829020835160029092020190815591015191015584516106b49086908390811061069957610699610fd1565b60200260200101516020015183610b1f90919063ffffffff16565b9150806106c08161101f565b91505061051d565b5060008381526008602052604090208190556106e8600280546001019055565b50505050565b6003546040516331a9108f60e11b8152600481018390526000916001600160a01b031690636352211e9060240160206040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b919061103a565b90506001600160a01b03811633146107b55760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064016102e1565b60008281526009602052604090205460ff16156108055760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481bdc195b995960921b60448201526064016102e1565b600082815260096020908152604080832060018101548452600783528184208054835181860281018601909452808452919493909190849084015b8282101561088657838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610840565b50505050600183015460009081526008602052604081205460028501549293509167ffffffffffffffff8111156108bf576108bf610dd1565b6040519080825280602002602001820160405280156108e8578160200160208202803683370190505b5090506000846002015467ffffffffffffffff81111561090a5761090a610dd1565b604051908082528060200260200182016040528015610933578160200160208202803683370190505b50905060005b85600201548110156109a5576000610952868684610b32565b90508084838151811061096757610967610fd1565b602002602001018181525050600183838151811061098757610987610fd1565b6020908102919091010152508061099d8161101f565b915050610939565b5060048054604051630fbfeffd60e11b81526001600160a01b0390911691631f7fdffa916109d9918a918791879101611092565b600060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b5050865460ff19166001179096555050505050505050565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016102e190610f83565b600555565b6000546001600160a01b03163314610a785760405162461bcd60e51b81526004016102e190610f83565b610a826000610bcb565b565b6000546001600160a01b03163314610aae5760405162461bcd60e51b81526004016102e190610f83565b6001600160a01b038116610b135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e1565b610b1c81610bcb565b50565b6000610b2b82846110e4565b9392505050565b600080610b49610b438560016110e4565b84610c1b565b90506000805b8651811015610bc157868181518110610b6a57610b6a610fd1565b60200260200101516020015182610b8191906110e4565b9150818311610baf57868181518110610b9c57610b9c610fd1565b6020026020010151600001519350610bc1565b80610bb98161101f565b915050610b4f565b5050509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516bffffffffffffffffffffffff193360601b1660208201526000908190439042906034016040516020818303038152906040528051906020012060001c610c6591906110fc565b6040516bffffffffffffffffffffffff194160601b1660208201528590459042906034016040516020818303038152906040528051906020012060001c610cac91906110fc565b610cb644426110e4565b610cc091906110e4565b610cca91906110e4565b610cd491906110e4565b610cde91906110e4565b610ce891906110e4565b604051602001610cfa91815260200190565b60408051601f198184030181529190528051602090910120905083610d1f81836110fc565b610d29919061111e565b610d33908261113d565b949350505050565b600060208284031215610d4d57600080fd5b5035919050565b60008060408385031215610d6757600080fd5b50508035926020909101359150565b6001600160a01b0381168114610b1c57600080fd5b600080600060608486031215610da057600080fd5b833560068110610daf57600080fd5b9250602084013591506040840135610dc681610d76565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610e0a57610e0a610dd1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e3957610e39610dd1565b604052919050565b60006020808385031215610e5457600080fd5b823567ffffffffffffffff80821115610e6c57600080fd5b818501915085601f830112610e8057600080fd5b813581811115610e9257610e92610dd1565b610ea0848260051b01610e10565b818152848101925060069190911b830184019087821115610ec057600080fd5b928401925b81841015610f035760408489031215610ede5760008081fd5b610ee6610de7565b843581528585013586820152835260409093019291840191610ec5565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b84151581526080810160068510610f4b57634e487b7160e01b600052602160045260246000fd5b84602083015283604083015282606083015295945050505050565b600060208284031215610f7857600080fd5b8135610b2b81610d76565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610fca57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ff957600080fd5b81518015158114610b2b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561103357611033611009565b5060010190565b60006020828403121561104c57600080fd5b8151610b2b81610d76565b600081518084526020808501945080840160005b838110156110875781518752958201959082019060010161106b565b509495945050505050565b6001600160a01b03841681526080602082018190526000906110b690830185611057565b82810360408401526110c88185611057565b8381036060909401939093525050600081526020019392505050565b600082198211156110f7576110f7611009565b500190565b60008261111957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561113857611138611009565b500290565b60008282101561114f5761114f611009565b50039056fea264697066735822122072bf578a619a997d77dde6f9686ef17ebe652d9b53165470a399b1b1b845018164736f6c63430008090033";

type FareNFTLootBoxControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FareNFTLootBoxControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FareNFTLootBoxController__factory extends ContractFactory {
  constructor(...args: FareNFTLootBoxControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _itemAddress: string,
    _nftAddress: string,
    threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FareNFTLootBoxController> {
    return super.deploy(
      _itemAddress,
      _nftAddress,
      threshold,
      overrides || {}
    ) as Promise<FareNFTLootBoxController>;
  }
  override getDeployTransaction(
    _itemAddress: string,
    _nftAddress: string,
    threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _itemAddress,
      _nftAddress,
      threshold,
      overrides || {}
    );
  }
  override attach(address: string): FareNFTLootBoxController {
    return super.attach(address) as FareNFTLootBoxController;
  }
  override connect(signer: Signer): FareNFTLootBoxController__factory {
    return super.connect(signer) as FareNFTLootBoxController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FareNFTLootBoxControllerInterface {
    return new utils.Interface(_abi) as FareNFTLootBoxControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FareNFTLootBoxController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FareNFTLootBoxController;
  }
}
