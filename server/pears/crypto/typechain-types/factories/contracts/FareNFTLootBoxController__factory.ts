/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FareNFTLootBoxController,
  FareNFTLootBoxControllerInterface,
} from "../../contracts/FareNFTLootBoxController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_itemAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
        ],
        internalType: "struct FareNFTLootBoxController.LootTableItem[]",
        name: "lootTableItems",
        type: "tuple[]",
      },
    ],
    name: "addLootTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestLootTableId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
    ],
    name: "getLootItemCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootBoxMap",
    outputs: [
      {
        internalType: "bool",
        name: "isOpened",
        type: "bool",
      },
      {
        internalType: "enum FareNFTLootBoxController.Rarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "itemThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootTableMap",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lootTableWeightMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootBoxId",
        type: "uint256",
      },
    ],
    name: "openLootBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum FareNFTLootBoxController.Rarity",
        name: "rarity",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "itemThreshold",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "rewardLootBoxToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "selectedLootTableId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "setItemThrehold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lootTableId",
        type: "uint256",
      },
    ],
    name: "setSelectedLootTableId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060065534801561001557600080fd5b50604051620013b7380380620013b7833981016040819052610036916100e6565b61003f3361007a565b60018055600380546001600160a01b039384166001600160a01b03199182161790915560048054949093169316929092179055600555610122565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e157600080fd5b919050565b6000806000606084860312156100fb57600080fd5b610104846100ca565b9250610112602085016100ca565b9150604084015190509250925092565b61128580620001326000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806364860ea211610097578063937ca25511610066578063937ca255146102585780639744256b14610261578063f2fde38b14610274578063f9cfd4c81461028757600080fd5b806364860ea2146101e1578063715018a6146101f45780638da5cb5b146101fc5780638f8e422a1461020d57600080fd5b80634015927a116100d35780634015927a1461017d57806355a02c2d14610190578063580b3fa7146101a35780635bf8633a146101b657600080fd5b806305010ce01461010557806321e604f31461013857806323bc00cd146101405780633378198a14610155575b600080fd5b610125610113366004610e36565b60009081526007602052604090205490565b6040519081526020015b60405180910390f35b6101256102a7565b61015361014e366004610e36565b6102b7565b005b610168610163366004610e4f565b6102ef565b6040805192835260208301919091520161012f565b61015361018b366004610e86565b61032b565b61015361019e366004610e36565b6104d5565b6101536101b1366004610f3c565b610841565b6003546101c9906001600160a01b031681565b6040516001600160a01b03909116815260200161012f565b6101536101ef366004610e36565b610a63565b610153610a92565b6000546001600160a01b03166101c9565b61024861021b366004610e36565b60096020526000908152604090208054600182015460029092015460ff8083169361010090930416919084565b60405161012f949392919061101f565b61012560065481565b6004546101c9906001600160a01b031681565b610153610282366004611061565b610ac8565b610125610295366004610e36565b60086020526000908152604090205481565b60006102b260025490565b905090565b6000546001600160a01b031633146102ea5760405162461bcd60e51b81526004016102e19061107e565b60405180910390fd5b600655565b6007602052816000526040600020818154811061030b57600080fd5b600091825260209091206002909102018054600190910154909250905082565b6000546001600160a01b031633146103555760405162461bcd60e51b81526004016102e19061107e565b600260015414156103a85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102e1565b60026001556005548211156103ff5760405162461bcd60e51b815260206004820152601c60248201527f4974656d207468726573686f6c642065786365656473206c696d69740000000060448201526064016102e1565b6003546040516340d097c360e01b81526001600160a01b03838116600483015260009216906340d097c390602401602060405180830381600087803b15801561044757600080fd5b505af115801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f91906110b3565b6000818152600960205260409020805460ff1981168255919250908590829061ffff19166101008360058111156104b8576104b8611009565b021790555060028101939093555050600654600191820155805550565b6003546040516331a9108f60e11b8152600481018390526001600160a01b03909116906000908290636352211e9060240160206040518083038186803b15801561051e57600080fd5b505afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055691906110cc565b905061056183610b63565b61056a81610ba8565b6001600160a01b03811633146105b25760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064016102e1565b60008381526009602052604090205460ff16156106025760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481bdc195b995960921b60448201526064016102e1565b6000838152600960205260409020600281015461061e90610b63565b60006007600083600101548152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561069d57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610657565b5050505060018301546000908152600860205260409020549091506106c181610b63565b6000836002015467ffffffffffffffff8111156106e0576106e0610ecc565b604051908082528060200260200182016040528015610709578160200160208202803683370190505b5090506000846002015467ffffffffffffffff81111561072b5761072b610ecc565b604051908082528060200260200182016040528015610754578160200160208202803683370190505b50905060005b85600201548110156107c6576000610773868684610bf0565b905080848381518110610788576107886110e9565b60200260200101818152505060018383815181106107a8576107a86110e9565b602090810291909101015250806107be81611115565b91505061075a565b5060048054604051630fbfeffd60e11b81526001600160a01b0390911691631f7fdffa916107fa918a91879187910161116b565b600060405180830381600087803b15801561081457600080fd5b505af1158015610828573d6000803e3d6000fd5b5050865460ff1916600117909655505050505050505050565b6000546001600160a01b0316331461086b5760405162461bcd60e51b81526004016102e19061107e565b600061087660025490565b6000818152600760205260408120919250805b8451811015610a345760045485516001600160a01b0390911690634f558e79908790849081106108bb576108bb6110e9565b6020026020010151600001516040518263ffffffff1660e01b81526004016108e591815260200190565b60206040518083038186803b1580156108fd57600080fd5b505afa158015610911573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093591906111bd565b6109775760405162461bcd60e51b8152602060048201526013602482015272125d195b48191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064016102e1565b826040518060400160405280878481518110610995576109956110e9565b60200260200101516000015181526020018784815181106109b8576109b86110e9565b60209081029190910181015181015190915282546001818101855560009485529382902083516002909202019081559101519101558451610a2090869083908110610a0557610a056110e9565b60200260200101516020015183610c9290919063ffffffff16565b915080610a2c81611115565b915050610889565b50610a3e81610b63565b6000838152600860205260409020819055610a5d600280546001019055565b50505050565b6000546001600160a01b03163314610a8d5760405162461bcd60e51b81526004016102e19061107e565b600555565b6000546001600160a01b03163314610abc5760405162461bcd60e51b81526004016102e19061107e565b610ac66000610ca5565b565b6000546001600160a01b03163314610af25760405162461bcd60e51b81526004016102e19061107e565b6001600160a01b038116610b575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e1565b610b6081610ca5565b50565b610b6081604051602401610b7991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610cf5565b6040516001600160a01b0382166024820152610b609060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b179052610cf5565b600080610c07610c018560016111df565b84610d16565b9050610c1281610b63565b6000805b8651811015610c8857868181518110610c3157610c316110e9565b60200260200101516020015182610c4891906111df565b9150818311610c7657868181518110610c6357610c636110e9565b6020026020010151600001519350610c88565b80610c8081611115565b915050610c16565b5050509392505050565b6000610c9e82846111df565b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6040516bffffffffffffffffffffffff193360601b1660208201526000908190439042906034016040516020818303038152906040528051906020012060001c610d6091906111f7565b6040516bffffffffffffffffffffffff194160601b1660208201528590459042906034016040516020818303038152906040528051906020012060001c610da791906111f7565b610db144426111df565b610dbb91906111df565b610dc591906111df565b610dcf91906111df565b610dd991906111df565b610de391906111df565b604051602001610df591815260200190565b60408051601f198184030181529190528051602090910120905083610e1a81836111f7565b610e249190611219565b610e2e9082611238565b949350505050565b600060208284031215610e4857600080fd5b5035919050565b60008060408385031215610e6257600080fd5b50508035926020909101359150565b6001600160a01b0381168114610b6057600080fd5b600080600060608486031215610e9b57600080fd5b833560068110610eaa57600080fd5b9250602084013591506040840135610ec181610e71565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f0557610f05610ecc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f3457610f34610ecc565b604052919050565b60006020808385031215610f4f57600080fd5b823567ffffffffffffffff80821115610f6757600080fd5b818501915085601f830112610f7b57600080fd5b813581811115610f8d57610f8d610ecc565b610f9b848260051b01610f0b565b818152848101925060069190911b830184019087821115610fbb57600080fd5b928401925b81841015610ffe5760408489031215610fd95760008081fd5b610fe1610ee2565b843581528585013586820152835260409093019291840191610fc0565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b8415158152608081016006851061104657634e487b7160e01b600052602160045260246000fd5b84602083015283604083015282606083015295945050505050565b60006020828403121561107357600080fd5b8135610c9e81610e71565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156110c557600080fd5b5051919050565b6000602082840312156110de57600080fd5b8151610c9e81610e71565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611129576111296110ff565b5060010190565b600081518084526020808501945080840160005b8381101561116057815187529582019590820190600101611144565b509495945050505050565b6001600160a01b038416815260806020820181905260009061118f90830185611130565b82810360408401526111a18185611130565b8381036060909401939093525050600081526020019392505050565b6000602082840312156111cf57600080fd5b81518015158114610c9e57600080fd5b600082198211156111f2576111f26110ff565b500190565b60008261121457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611233576112336110ff565b500290565b60008282101561124a5761124a6110ff565b50039056fea2646970667358221220bac5e72c4bf27ac2c1d3c567211de6f7079bfe11d1b1bd99619ef2fa465fef0864736f6c63430008090033";

type FareNFTLootBoxControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FareNFTLootBoxControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FareNFTLootBoxController__factory extends ContractFactory {
  constructor(...args: FareNFTLootBoxControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _itemAddress: string,
    _nftAddress: string,
    threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FareNFTLootBoxController> {
    return super.deploy(
      _itemAddress,
      _nftAddress,
      threshold,
      overrides || {}
    ) as Promise<FareNFTLootBoxController>;
  }
  override getDeployTransaction(
    _itemAddress: string,
    _nftAddress: string,
    threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _itemAddress,
      _nftAddress,
      threshold,
      overrides || {}
    );
  }
  override attach(address: string): FareNFTLootBoxController {
    return super.attach(address) as FareNFTLootBoxController;
  }
  override connect(signer: Signer): FareNFTLootBoxController__factory {
    return super.connect(signer) as FareNFTLootBoxController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FareNFTLootBoxControllerInterface {
    return new utils.Interface(_abi) as FareNFTLootBoxControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FareNFTLootBoxController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FareNFTLootBoxController;
  }
}
