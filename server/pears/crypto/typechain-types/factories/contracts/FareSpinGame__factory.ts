/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FareSpinGame,
  FareSpinGameInterface,
} from "../../contracts/FareSpinGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fareTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "linkTokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_vrfLinkFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "batchEntryMap",
    outputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalEntryAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWinAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameModeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomEliminator",
        type: "uint256",
      },
    ],
    name: "checkEliminator",
    outputs: [
      {
        internalType: "bool",
        name: "isEliminator",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eliminators",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomEliminator",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isEliminator",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "entryMap",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "winAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameModeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pickedNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "settled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fareTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameEdgeCeiling",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gameModes",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cardinality",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameEdgeFloor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getBatchEntryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEntryId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentGameModeId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentRoundId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getEntry",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "winAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameModeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pickedNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
        ],
        internalType: "struct FareSpinGame.Entry",
        name: "entry",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "getEntryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameModeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
    ],
    name: "getIsEliminator",
    outputs: [
      {
        internalType: "bool",
        name: "isEliminator",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameModeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pickedNumber",
            type: "uint256",
          },
        ],
        internalType: "struct FareSpinGame.EntryParam[]",
        name: "batchEntry",
        type: "tuple[]",
      },
    ],
    name: "placeEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomNum",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfRequestId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cardinality",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameEdgeFloor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "setGameMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "setTreasuryMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roundId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchEntryId",
        type: "uint256",
      },
    ],
    name: "settleBatchEntry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_str",
        type: "string",
      },
    ],
    name: "strToUint",
    outputs: [
      {
        internalType: "uint256",
        name: "res",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "vrfMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x66038d7ea4c67fff600455606460055560e0604052600160c08190526008553480156200002b57600080fd5b50604051620021db380380620021db8339810160408190526200004e916200011d565b600160005584846200006033620000ae565b6001600160a01b0391821660a0528116608052600380546001600160a01b0319908116988316989098179055600a93909355600b9190915560068054909516911617909255506200018c9050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200011857600080fd5b919050565b60008060008060008060c087890312156200013757600080fd5b620001428762000100565b9550620001526020880162000100565b9450620001626040880162000100565b935060608701519250608087015191506200018060a0880162000100565b90509295509295509295565b60805160a05161202c620001af6000396000610cc901526000505061202c6000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c8063812391f011610104578063af9257ff116100a2578063d243b38e11610071578063d243b38e1461051f578063f2fde38b1461053f578063f647ca8414610552578063fb9ea8f41461059b57600080fd5b8063af9257ff146104dd578063b4be2e25146104f0578063c5ef3ec5146104f9578063c5f956af1461050c57600080fd5b80638da5cb5b116100de5780638da5cb5b1461042357806394985ddd1461044857806398ba676d1461045b57806398ff0a3e146104ca57600080fd5b8063812391f0146103995780638c4d6e0f146103b95780638c65c81f146103d957600080fd5b806365a744db116101715780636ec6f7fa1161014b5780636ec6f7fa146102fa5780636fd4b5741461034e5780637059ef2b1461037e578063715018a61461039157600080fd5b806365a744db1461026f5780636605bfda146102df578063676f8cde146102f257600080fd5b80631bebf956116101ad5780631bebf9561461020c578063257e66c414610241578063530759e9146102545780635727e25d1461026757600080fd5b8062032235146101d357806301bc0d16146101ef57806319e1efe814610204575b600080fd5b6101dc60055481565b6040519081526020015b60405180910390f35b6102026101fd366004611b2c565b6105a3565b005b61020261065c565b61023161021a366004611b67565b6000918252600e6020526040909120600201541190565b60405190151581526020016101e6565b61020261024f366004611b67565b6106cf565b610231610262366004611b67565b610b08565b6101dc610b46565b6102b261027d366004611b89565b600e60205260009081526040902080546001820154600283015460038401546004850154600590950154939492939192909186565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016101e6565b6102026102ed366004611ba2565b610b56565b6101dc610ba2565b61030d610308366004611b67565b610bad565b604080516001600160a01b0390981688526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e0016101e6565b61036161035c366004611b67565b610c14565b6040805193845260208401929092521515908201526060016101e6565b61020261038c366004611b89565b610c59565b610202610c88565b6101dc6103a7366004611b89565b6000908152600c602052604090205490565b6101dc6103c7366004611b89565b6000908152600d602052604090205490565b6104086103e7366004611b89565b600f6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016101e6565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016101e6565b610202610456366004611b67565b610cbe565b61046e610469366004611b67565b610d44565b6040516101e6919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0828101519082015260c09182015115159181019190915260e00190565b6102026104d8366004611c3b565b610e23565b600354610430906001600160a01b031681565b6101dc60045481565b6101dc610507366004611d0f565b6112f4565b600654610430906001600160a01b031681565b6101dc61052d366004611b89565b60116020526000908152604090205481565b61020261054d366004611ba2565b6113e9565b610565610560366004611b67565b611484565b604080519586526001600160a01b039094166020860152911515928401929092526060830191909152608082015260a0016101e6565b6101dc6114e0565b6001546001600160a01b031633146105d65760405162461bcd60e51b81526004016105cd90611da4565b60405180910390fd5b60006105e160085490565b6040805160c08101825282815260208082018a81528284018a8152606084018a8152608085018a815260a086018a81526000898152600e90965296909420945185559151600185015551600284015551600383015551600482015590516005909101559050610654600880546001019055565b505050505050565b6001546001600160a01b031633146106865760405162461bcd60e51b81526004016105cd90611da4565b600061069260006114eb565b905060006106a060016114eb565b905060006106ac61162b565b600081815260116020526040902084905590506106ca8383836116ad565b505050565b600260005414156106f25760405162461bcd60e51b81526004016105cd90611dd9565b60026000908155828152600c6020526040812080548390811061071757610717611e10565b6000918252602090912060049091020160018101549091506001600160a01b03166107765760405162461bcd60e51b815260206004820152600f60248201526e115b9d1c9e481b9bdd08199bdd5b99608a1b60448201526064016105cd565b6001810154600160a01b900460ff16156107ca5760405162461bcd60e51b8152602060048201526015602482015274115b9d1c9e48185b1c9958591e481cd95d1d1b1959605a1b60448201526064016105cd565b826107d460075490565b1161081a5760405162461bcd60e51b8152602060048201526016602482015275149bdd5b99081b9bdd081e595d081c995cdbdb1d995960521b60448201526064016105cd565b80546000908152600d602052604081209080805b8354811015610a6f576010600085838154811061084d5761084d611e10565b9060005260206000209060070201600301548152602001908152602001600020878154811061087e5761087e611e10565b600091825260209091206002600390920201015460ff16156108c057826108bb5760018501546108b6906001600160a01b031661178f565b600192505b610a27565b6000600e60008684815481106108d8576108d8611e10565b90600052602060002090600702016003015481526020019081526020016000206040518060c0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152505090506000600f60008a81526020019081526020016000206001015490508160200151600a14156109775761097481600a6117ba565b90505b85838154811061098957610989611e10565b9060005260206000209060070201600401548260200151826109ab9190611e3c565b1415610a245760006109ed83606001518886815481106109cd576109cd611e10565b9060005260206000209060070201600101546117c690919063ffffffff16565b905080878581548110610a0257610a02611e10565b6000918252602090912060026007909202010155610a208186611e66565b9450505b50505b6001848281548110610a3b57610a3b611e10565b60009182526020909120600790910201600601805460ff191691151591909117905580610a6781611e7e565b91505061082e565b508015610ae8576003546001850154604051632bf545c760e11b81526001600160a01b039182166004820152602481018490529116906357ea8b8e90604401600060405180830381600087803b158015610ac857600080fd5b505af1158015610adc573d6000803e3d6000fd5b50505050600384018190555b5050506001908101805460ff60a01b1916600160a01b1790556000555050565b6000828152601060205260408120805483908110610b2857610b28611e10565b600091825260209091206002600390920201015460ff169392505050565b6000610b5160075490565b905090565b6001546001600160a01b03163314610b805760405162461bcd60e51b81526004016105cd90611da4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b5160085490565b600d6020528160005260406000208181548110610bc957600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601546001600160a01b0390951697509295509093909260ff1687565b60106020528160005260406000208181548110610c3057600080fd5b600091825260209091206003909102018054600182015460029092015490935090915060ff1683565b6001546001600160a01b03163314610c835760405162461bcd60e51b81526004016105cd90611da4565b600555565b6001546001600160a01b03163314610cb25760405162461bcd60e51b81526004016105cd90611da4565b610cbc60006117d2565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d365760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016105cd565b610d408282611824565b5050565b610d8f6040518060e0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6000838152600d60205260409020805483908110610daf57610daf611e10565b60009182526020918290206040805160e081018252600790930290910180546001600160a01b031683526001810154938301939093526002830154908201526003820154606082015260048201546080820152600582015460a082015260069091015460ff16151560c08201529392505050565b60026000541415610e465760405162461bcd60e51b81526004016105cd90611dd9565b6002600090815581519080610e5a60075490565b90506000610e6760095490565b905060005b8481101561115957858181518110610e8657610e86611e10565b60200260200101516000015160001415610ed95760405162461bcd60e51b8152602060048201526014602482015273416d6f756e742063616e2774206265207a65726f60601b60448201526064016105cd565b600e6000878381518110610eef57610eef611e10565b60200260200101516020015181526020019081526020016000206000015460001415610f515760405162461bcd60e51b8152602060048201526011602482015270496e76616c69642067616d65206d6f646560781b60448201526064016105cd565b600e6000878381518110610f6757610f67611e10565b602002602001015160200151815260200190815260200160002060010154868281518110610f9757610f97611e10565b60200260200101516040015110610fe85760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2103834b1b5b2b210373ab6b132b960591b60448201526064016105cd565b611018868281518110610ffd57610ffd611e10565b6020026020010151600001518561189290919063ffffffff16565b9350600d60008381526020019081526020016000206040518060e00160405280336001600160a01b0316815260200188848151811061105957611059611e10565b60200260200101516000015181526020016000815260200188848151811061108357611083611e10565b60200260200101516020015181526020018884815181106110a6576110a6611e10565b6020908102919091018101516040908101518352828201889052600092810183905284546001808201875595845292829020845160079094020180546001600160a01b0319166001600160a01b039094169390931783559083015193820193909355918101516002830155606081015160038301556080810151600483015560a0810151600583015560c001516006909101805460ff19169115159190911790558061115181611e7e565b915050610e6c565b506000828152600c60209081526040808320815160a08101835285815233818501818152828501878152606084018b815260808501898152865460018181018955978b5298909920945160049889029095019485559151948401805491511515600160a01b026001600160a81b03199092166001600160a01b039687161791909117905551600283015594516003918201555491516303fc91f360e51b8152911692637f923e6092611221928891016001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561123b57600080fd5b505af115801561124f573d6000803e3d6000fd5b50506003546006546005546001600160a01b0392831694506357ea8b8e935091169061127c9087906117ba565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156112c257600080fd5b505af11580156112d6573d6000803e3d6000fd5b505050506112e8600980546001019055565b50506001600055505050565b6000805b82518110156113e3576000603084838151811061131757611317611e10565b0160200151611329919060f81c611e99565b60ff16108061136057506009603084838151811061134957611349611e10565b016020015161135b919060f81c611e99565b60ff16115b1561136e5750600092915050565b600181845161137d9190611ebc565b6113879190611ebc565b61139290600a611fb7565b60308483815181106113a6576113a6611e10565b01602001516113b8919060f81c611e99565b60ff166113c59190611fc3565b6113cf9083611e66565b9150806113db81611e7e565b9150506112f8565b50919050565b6001546001600160a01b031633146114135760405162461bcd60e51b81526004016105cd90611da4565b6001600160a01b0381166114785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cd565b611481816117d2565b50565b600c60205281600052604060002081815481106114a057600080fd5b600091825260209091206004909102018054600182015460028301546003909301549194506001600160a01b0381169350600160a01b900460ff16919085565b6000610b5160095490565b6040516001600160601b03193360601b1660208201526000908190439042906034016040516020818303038152906040528051906020012060001c6115309190611fe2565b6040516001600160601b03194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c6115709190611fe2565b61157a4442611e66565b6115849190611e66565b61158e9190611e66565b6115989190611e66565b6115a29190611e66565b6040516020016115b491815260200190565b6040516020818303038152906040528051906020012060001c905082156116045766038d7ea4c68000806115e88184611fe2565b6115f29190611fc3565b6115fc9083611ebc565b949350505050565b61160f606482611fe2565b61161a906064611fc3565b6116249082611ebc565b9392505050565b60008044424160405160200161166193929190928352602083019190915260601b6001600160601b031916604082015260540190565b60408051601f198184030181529190528051602090910120905061168c662386f26fc1000082611fe2565b61169d90662386f26fc10000611fc3565b6116a79082611ebc565b92915050565b6001546001600160a01b031633146116d75760405162461bcd60e51b81526004016105cd90611da4565b60006116e260075490565b6000818152600c60205260409020549091506117375760405162461bcd60e51b8152602060048201526014602482015273273790383630bcb2b9399034b7103937bab7321760611b60448201526064016105cd565b6040805160608101825282815260208082018781528284018681526000868152600f9093529390912091518255516001820155905160029091015561177b8361189e565b611789600780546001019055565b50505050565b600260005414156117b25760405162461bcd60e51b81526004016105cd90611dd9565b506001600055565b60006116248284611fe2565b60006116248284611fc3565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061182f82611961565b905060006118408260006002611a5f565b905060006118518360026011611a5f565b9050600061185e836112f4565b9050600061186b836112f4565b600088815260116020526040902087905590506118898282896116ad565b50505050505050565b60006116248284611e66565b600260005414156118c15760405162461bcd60e51b81526004016105cd90611dd9565b60026000556007548060015b818110156119565760008181526010602090815260408083208151606081018352878152808401898152868652600e85528386206002908101548b101594830194855283546001808201865594885295909620915160039095029091019384555190830155519101805460ff19169115159190911790558061194e81611e7e565b9150506118cd565b505060016000555050565b6060816119855750506040805180820190915260018152600360fc1b602082015290565b8160005b81156119af578061199981611e7e565b91506119a89050600a83611fe2565b9150611989565b60008167ffffffffffffffff8111156119ca576119ca611bcb565b6040519080825280601f01601f1916602001820160405280156119f4576020820181803683370190505b5090505b84156115fc57611a09600183611ebc565b9150611a16600a86611e3c565b611a21906030611e66565b60f81b818381518110611a3657611a36611e10565b60200101906001600160f81b031916908160001a905350611a58600a86611fe2565b94506119f8565b6060836000611a6e8585611ebc565b67ffffffffffffffff811115611a8657611a86611bcb565b6040519080825280601f01601f191660200182016040528015611ab0576020820181803683370190505b509050845b84811015611b2257828181518110611acf57611acf611e10565b01602001516001600160f81b03191682611ae98884611ebc565b81518110611af957611af9611e10565b60200101906001600160f81b031916908160001a90535080611b1a81611e7e565b915050611ab5565b5095945050505050565b600080600080600060a08688031215611b4457600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215611b7a57600080fd5b50508035926020909101359150565b600060208284031215611b9b57600080fd5b5035919050565b600060208284031215611bb457600080fd5b81356001600160a01b038116811461162457600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611c0457611c04611bcb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c3357611c33611bcb565b604052919050565b60006020808385031215611c4e57600080fd5b823567ffffffffffffffff80821115611c6657600080fd5b818501915085601f830112611c7a57600080fd5b813581811115611c8c57611c8c611bcb565b611c9a848260051b01611c0a565b81815284810192506060918202840185019188831115611cb957600080fd5b938501935b82851015611d035780858a031215611cd65760008081fd5b611cde611be1565b8535815286860135878201526040808701359082015284529384019392850192611cbe565b50979650505050505050565b60006020808385031215611d2257600080fd5b823567ffffffffffffffff80821115611d3a57600080fd5b818501915085601f830112611d4e57600080fd5b813581811115611d6057611d60611bcb565b611d72601f8201601f19168501611c0a565b91508082528684828501011115611d8857600080fd5b8084840185840137600090820190930192909252509392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082611e4b57611e4b611e26565b500690565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e7957611e79611e50565b500190565b6000600019821415611e9257611e92611e50565b5060010190565b600060ff821660ff841680821015611eb357611eb3611e50565b90039392505050565b600082821015611ece57611ece611e50565b500390565b600181815b80851115611f0e578160001904821115611ef457611ef4611e50565b80851615611f0157918102915b93841c9390800290611ed8565b509250929050565b600082611f25575060016116a7565b81611f32575060006116a7565b8160018114611f485760028114611f5257611f6e565b60019150506116a7565b60ff841115611f6357611f63611e50565b50506001821b6116a7565b5060208310610133831016604e8410600b8410161715611f91575081810a6116a7565b611f9b8383611ed3565b8060001904821115611faf57611faf611e50565b029392505050565b60006116248383611f16565b6000816000190483118215151615611fdd57611fdd611e50565b500290565b600082611ff157611ff1611e26565b50049056fea2646970667358221220ff16fcdccbd86162619e38ea70dcf8751579c84c35ed383a9ec2b53ed51ca94364736f6c63430008090033";

type FareSpinGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FareSpinGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FareSpinGame__factory extends ContractFactory {
  constructor(...args: FareSpinGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fareTokenAddress: string,
    vrfCoordinator: string,
    linkTokenAddress: string,
    _keyHash: BytesLike,
    _vrfLinkFee: BigNumberish,
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FareSpinGame> {
    return super.deploy(
      _fareTokenAddress,
      vrfCoordinator,
      linkTokenAddress,
      _keyHash,
      _vrfLinkFee,
      _treasuryAddress,
      overrides || {}
    ) as Promise<FareSpinGame>;
  }
  override getDeployTransaction(
    _fareTokenAddress: string,
    vrfCoordinator: string,
    linkTokenAddress: string,
    _keyHash: BytesLike,
    _vrfLinkFee: BigNumberish,
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fareTokenAddress,
      vrfCoordinator,
      linkTokenAddress,
      _keyHash,
      _vrfLinkFee,
      _treasuryAddress,
      overrides || {}
    );
  }
  override attach(address: string): FareSpinGame {
    return super.attach(address) as FareSpinGame;
  }
  override connect(signer: Signer): FareSpinGame__factory {
    return super.connect(signer) as FareSpinGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FareSpinGameInterface {
    return new utils.Interface(_abi) as FareSpinGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FareSpinGame {
    return new Contract(address, _abi, signerOrProvider) as FareSpinGame;
  }
}
